NAME
    game.py - Implements a Snake game with AI using reinforcement learning.

DESCRIPTION
    This module implements the Snake game with AI integration. The game logic allows a snake to navigate a 2D grid, consuming food and avoiding collisions with the walls and its own body. The snake moves based on actions determined by the AI. The goal is to implement an intelligent agent capable of learning the optimal moves through reinforcement learning techniques.

FUNCTIONS
reset()
    Resets the game state, initializing the snake, food, and score.
    :return: None

_place_food()
    Places the food in a random location on the grid.
    :return: None

play_step(action)
    Processes one game step based on the action input, moves the snake, checks for collisions, and updates the game state.
    :param action: A list representing the action to take (e.g., [1, 0, 0] for no turn, [0, 1, 0] for a right turn).
    :return: A tuple containing the reward, game over status, and current score.

is_collision(point=None)
    Checks if the snake has collided with the walls or itself.
    :param point: The point to check for collision (defaults to the head of the snake).
    :return: True if a collision is detected, False otherwise.

_update_ui()
    Updates the graphical user interface (UI), rendering the snake, food, and score.
    :return: None

_move(action)
    Moves the snake based on the provided action, adjusting the direction and head position.
    :param action: A list representing the action to take (e.g., [1, 0, 0] for no turn, [0, 1, 0] for a right turn).
    :return: None

CLASSES
SnakeGameAI
    The main class representing the Snake game with AI. It handles game logic, UI updates, and snake movements.
    
    Methods defined here:
    
    __init__(self, width=1280, height=720)
        Initializes the game with the given width and height, setting up the display, clock, and calling reset.
        
        :param width: The width of the game window.
        :param height: The height of the game window.
        :return: None

    reset(self)
        Resets the game state, including the snake, food, and score.
        
        :return: None

    _place_food(self)
        Places food in a random location on the grid, ensuring it does not overlap with the snake.
        
        :return: None

    play_step(self, action)
        Executes a single step of the game, processing input, moving the snake, checking for collisions, and updating the game state.
        
        :param action: The action to be executed, such as moving in a particular direction.
        :return: A tuple (reward, game_over, score).

    is_collision(self, point=None)
        Checks if the snake has collided with itself or the walls.
        
        :param point: The point to check for collisions, defaults to the head of the snake.
        :return: True if a collision is detected, False otherwise.

    _update_ui(self)
        Updates the user interface, drawing the snake, food, and score on the screen.
        
        :return: None

    _move(self, action)
        Moves the snake based on the given action, updating the snake's direction and head position.
        
        :param action: The action to perform, such as moving right, left, up, or down.
        :return: None

DATA
    WHITE = (255, 255, 255)
    RED = (220, 20, 60)
    BLUE1 = (30, 144, 255)
    BLUE2 = (0, 100, 255)
    BLACK = (0, 0, 0)
    BLOCK_SIZE = 20
    SPEED = 120

FILE
    snake_game_ai.py

Explicación de los Componentes:
    snake_game_ai:
        El nombre del archivo Python sin la extensión .py. En este caso, el archivo se llama "snake_game_ai.py".
    SHORT_DESCRIPTION:
        Implementa un juego de Snake con un agente de IA utilizando aprendizaje por refuerzo.
    DETAILED_DESCRIPTION:
        Este módulo implementa el juego de Snake con integración de IA. La lógica del juego permite que una serpiente navegue por una cuadrícula 2D, consuma comida y evite colisiones con las paredes y su propio cuerpo. La serpiente se mueve en función de las acciones determinadas por la IA. El objetivo es implementar un agente inteligente capaz de aprender los movimientos óptimos mediante técnicas de aprendizaje por refuerzo.
    FUNCTIONS_SECTION:
        Las funciones definidas en el módulo incluyen métodos para inicializar el juego, actualizar la interfaz de usuario, mover la serpiente, verificar colisiones y gestionar el estado del juego.
    CLASSES_SECTION:
        La clase principal es SnakeGameAI, que gestiona la lógica y la interfaz del juego.
    DATA_SECTION:
        Las variables globales incluyen colores definidos en formato RGB y configuraciones como el tamaño del bloque y la velocidad del juego.
    FILE_PATH:
        El archivo se llama "snake_game_ai.py".
